{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","classNames","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","key","App","state","setState","this","src","coronaImage","image","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.de79ce6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport CountUp from 'react-countup';\nimport classNames from 'classnames';\n\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\n    if (!confirmed) {\n        return 'Loading...';\n    }\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={classNames(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={classNames(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={classNames(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) => {\n\n    let changeableUrl = url;\n\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n    try {\n\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n        return { confirmed, recovered, deaths, lastUpdate };\n\n    } catch (ex) {\n\n    }\n\n}\n\nexport const fetchDailyData = async () => {\n\n    try {\n\n        const { data } = await axios.get(`${url}/daily`);\n\n        return data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n\n    } catch (ex) {\n\n    }\n\n}\n\nexport const fetchCountries = async () => {\n\n    try {\n\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n\n        return countries.map((country) => country.name);\n\n    } catch (ex) {\n\n\n    }\n\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from './../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(() => {\n\n        const fetchAPI  = async () => {\n\n            const dailyData = await fetchDailyData();\n\n            setDailyData(dailyData);\n\n        };\n\n        fetchAPI();\n\n    }, []);\n\n    const lineChart = (\n        dailyData.length ? (\n            <Line\n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true\n                    },\n                    {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                        fill: true\n                    }],\n                }}\n            />\n        ) : null\n    );\n\n    const barChart = (\n        confirmed\n            ? (<Bar\n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: [\n                                'rgba(0, 0, 255, 0.5)',\n                                'rgba(0, 0, 255, 0.5)',\n                                'rgba(255, 0, 0, 0.5)'\n                            ],\n                            data: [\n                                confirmed.value,\n                                recovered.value,\n                                deaths.value\n                            ]\n                        }]\n                    }}\n                    options={{\n                        legend: { display: false },\n                        title: { display: true, text: `Current state in ${country}` }\n                    }}\n                />\n            )\n            : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from './../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\n    const [countries, setCountries] = useState([]);\n\n    useEffect(() => {\n\n        const fetchAPI = async () => {\n            setCountries(await fetchCountries());\n          };\n\n          fetchAPI();\n\n    }, []);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {countries.map((country, key) => <option key={key} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport { fetchData } from './api';\n\nimport styles from './App.module.css';\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n\n    state = {\n        data: {},\n        country: ''\n    }\n\n    async componentDidMount() {\n\n        const data = await fetchData();\n\n        this.setState({ data: data });\n\n    }\n\n    handleCountryChange = async (country) => {\n\n        const data = await fetchData(country);\n\n        this.setState({ data, country })\n\n    }\n\n    render() {\n\n        const { data, country } = this.state;\n\n        return (\n            <div className={styles.container}>\n                <img src={coronaImage} className={styles.image} />\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country} />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './App';\n\nReactDom.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}